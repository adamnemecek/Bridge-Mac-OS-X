{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset0 AnonymousPro;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green13\blue145;\red92\green38\blue153;
\red46\green13\blue110;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 Properly scrolling the keyRoll is a challenge.\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf0 \CocoaLigature0 - (\cf3 void\cf0 ) boundsDidChangeNotification: (\cf4 NSNotification\cf0  *) notification\
\
We are changing the bounds of the keyRoll, which is exhibiting different behaviors from the rulerView\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf3 float\cf0  boundsY = changedBoundsOrigin.\cf4 y\cf0  - [changedContentView \cf5 frame\cf0 ].\cf4 size\cf0 .\cf4 height\cf0  + [\cf3 self\cf0  \cf5 bounds\cf0 ].\cf4 size\cf0 .\cf4 height\cf0  - scrollBarHeight;\
Pre window resize:\
	* the keyRollView and EditorView sync as intended.\
Post-window resize:\
	* The scrolling is out of sync\
	\
	We'll need an if-then: \CocoaLigature1 "If the document is now shorter than the scrollView's contentView, scroll to point 0, otherwise scroll to a point that's ((height of contentView - height of documentView) * oldVerticalPercentage) down the document." X axis is of course similar.\
\pard\pardeftab720\ql\qnatural
\cf0 	(http://stackoverflow.com/questions/1296920/how-to-maintain-the-scroll-position-in-nsscrollview-when-changing-scale)\
	\
	Behaviors change based on the size of the window AND the size of the content view. SIGH}